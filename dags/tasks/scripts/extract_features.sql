SELECT
    *,
    CASE 
        WHEN EXTRACT(HOUR FROM TX_DATETIME) <= 6 THEN 1 
        ELSE 0 
    END AS TX_DURING_NIGHT,
    CASE 
        WHEN EXTRACT(DAYOFWEEK FROM TX_DATETIME) IN (1, 7) THEN 1 
        ELSE 0 
    END AS TX_DURING_WEEKEND,
    AVG(TX_AMOUNT) OVER(PARTITION BY CUSTOMER_ID ORDER BY UNIX_SECONDS(TX_DATETIME) RANGE BETWEEN 86400 PRECEDING AND CURRENT ROW ) AS CUSTOMER_ID_AVG_AMOUNT_1DAY_WINDOW,
    COUNT(*) OVER(PARTITION BY CUSTOMER_ID ORDER BY UNIX_SECONDS(TX_DATETIME) RANGE BETWEEN 86400 PRECEDING AND CURRENT ROW) AS CUSTOMER_ID_NB_TX_1DAY_WINDOW,
    
    AVG(TX_AMOUNT) OVER(PARTITION BY CUSTOMER_ID ORDER BY UNIX_SECONDS(TX_DATETIME) RANGE BETWEEN 604800 PRECEDING AND CURRENT ROW) AS CUSTOMER_ID_AVG_AMOUNT_7DAY_WINDOW,
    COUNT(*) OVER(PARTITION BY CUSTOMER_ID ORDER BY UNIX_SECONDS(TX_DATETIME) RANGE BETWEEN 604800 PRECEDING AND CURRENT ROW) AS CUSTOMER_ID_NB_TX_7DAY_WINDOW,
   
    AVG(TX_AMOUNT) OVER(PARTITION BY CUSTOMER_ID ORDER BY UNIX_SECONDS(TX_DATETIME) RANGE BETWEEN 2592000 PRECEDING AND CURRENT ROW) AS CUSTOMER_ID_AVG_AMOUNT_30DAY_WINDOW,
    COUNT(*) OVER(PARTITION BY CUSTOMER_ID ORDER BY UNIX_SECONDS(TX_DATETIME) RANGE BETWEEN 2592000 PRECEDING AND CURRENT ROW) AS CUSTOMER_ID_NB_TX_30DAY_WINDOW,

    AVG(TX_FRAUD) OVER(PARTITION BY TERMINAL_ID ORDER BY UNIX_SECONDS(TX_DATETIME) RANGE BETWEEN 86400 PRECEDING AND CURRENT ROW ) AS TERMINAL_ID_RISK_1DAY_WINDOW,
    COUNT(*) OVER(PARTITION BY TERMINAL_ID ORDER BY UNIX_SECONDS(TX_DATETIME) RANGE BETWEEN 86400 PRECEDING AND CURRENT ROW) AS TERMINAL_ID_NB_TX_1DAY_WINDOW,
    
    AVG(TX_FRAUD) OVER(PARTITION BY TERMINAL_ID ORDER BY UNIX_SECONDS(TX_DATETIME) RANGE BETWEEN 604800 PRECEDING AND CURRENT ROW) AS TERMINAL_ID_RISK_7DAY_WINDOW,
    COUNT(*) OVER(PARTITION BY TERMINAL_ID ORDER BY UNIX_SECONDS(TX_DATETIME) RANGE BETWEEN 604800 PRECEDING AND CURRENT ROW) AS TERMINAL_ID_NB_TX_7DAY_WINDOW,
   
    AVG(TX_FRAUD) OVER(PARTITION BY TERMINAL_ID ORDER BY UNIX_SECONDS(TX_DATETIME) RANGE BETWEEN 2592000 PRECEDING AND CURRENT ROW) AS TERMINAL_ID_RISK_30DAY_WINDOW,
    COUNT(*) OVER(PARTITION BY TERMINAL_ID ORDER BY UNIX_SECONDS(TX_DATETIME) RANGE BETWEEN 2592000 PRECEDING AND CURRENT ROW) AS TERMINAL_ID_NB_TX_30DAY_WINDOW,
FROM 
    {{DATASET_IN}}.{{TABLE_IN}}
